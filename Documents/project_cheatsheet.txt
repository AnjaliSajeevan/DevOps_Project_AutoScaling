####################### Project CheatSheet - Team 1 ###############################

#Docker Build:

##Backend:
docker build -f Dockerfile-dev -t somanwita/twtr-be .
docker push somanwita/twtr-be

##Frontend:
docker build -f Dockerfile.dev -t somanwita/twtr-fe .
docker push somanwita/twtr-fe

docker run --rm --network docker-network -p 5000:5000 somanwita/twtr-be
docker run --rm --network docker-network -p 80:80 somanwita/twtr-fe

#Go to tf-azure folder and run the below commands
terraform init
terraform plan
terraform apply

#to get the config file and replace that in .kube folder
terraform output kube_config > c:/Users/paulr/.kube/config-terraform-aks-prometheus

#to see the twtr-be in kubectl
kubectl describe deploy twtr-be
kubectl get nodes
kubectl top nodes
kubectl get deploy --all-namespaces

# to create the combined deploy and service file
kubectl apply -f twtr-combo.yaml

# ip of the backend
http://40.112.134.105/


#Install metric-server:
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
kubectl get pods -n kube-system -l k8s-app=metrics-server
kubectl get deployment metrics-server -n kube-system
kubectl get --raw "/apis/metrics.k8s.io/" | jq

# to create the hpa file
kubectl create -f twtr-scaler.yaml --validate=false

# to view the hpa details
kubectl get hpa
kubectl describe hpa twtr-be

#Prometheus
#to create prometheus -> go to monitoring folder ->prometheus folder and run the below commands
kubectl create -f clusterRole.yaml
kubectl create -f config-map.yaml
kubectl create -f prometheus-deployment.yaml --namespace=monitoring

#to view all prometheus deploymen pods etc
kubectl get deployments --namespace=monitoring
kubectl get deployments --all-namespaces
kubectl get pods --namespace=monitoring

#port forwarding for prometheus
kubectl port-forward prometheus-deployment-87cc8fb88-gp8zz 8080:9090 -n monitoring

#create service for prometheus
kubectl create -f prometheus-service.yaml --namespace=monitoring
kubectl get svc --namespace=monitoring



#Kubernets Dashboard:
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml
kubectl proxy

#Grafana
#to create grafana -> go to monitoring folder ->grafana folder and run the below commands
kubectl create -f grafana-datasource-config.yaml
kubectl create -f grafana-datasource-deploy.yaml
kubectl create -f grafana-datasource-service.yaml
kubectl get svc --namespace=monitoring

#grafana ip: 
137.135.13.115:3000

#grafana user details:
user: admin, password: csyeproject

Standard_D11:	CPU cores: 2	Memory: 14 GB
m5large: 	CPU core : 2 	Memory : 8GB

#to install kube-state-metrics
git clone https://github.com/devopscube/kube-state-metrics-configs.git
kubectl apply -f kube-state-metrics-configs/
kubectl get deployments kube-state-metrics -n kube-system

#alertmanager
#to create alertmanager -> go to monitoring folder ->alertmanager folder and run the below commands
kubectl create -f AlertManagerConfigmap.yaml
kubectl create -f AlertTemplateConfigMap.yaml
kubectl create -f AlertManagerDeployment.yaml
kubectl create -f AlertManagerService.yaml

kubectl port-forward alertmanager-896fd948-c4k6j 9093:9093 -n monitoring



################################################################################


#reference
kubectl get limitrange -o=yaml
40.112.134.105


